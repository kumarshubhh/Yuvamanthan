{"ast":null,"code":"var _jsxFileName = \"/home/shubh/Yuvamanthan/client/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\n\n// ✅ Backend Base URL (deployed)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"https://yuvamanthan.onrender.com\";\n\n// Set Axios base URL globally\naxios.defaults.baseURL = API_BASE_URL;\n\n// Types\n\n// Initial state\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true\n};\n\n// Action types\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'AUTH_START':\n      return {\n        ...state,\n        loading: true\n      };\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false\n      };\n    case 'AUTH_FAILURE':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = /*#__PURE__*/createContext(undefined);\n\n// Auth provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Axios default Authorization setup\n  useEffect(() => {\n    if (state.token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n      localStorage.setItem('token', state.token);\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n      localStorage.removeItem('token');\n    }\n  }, [state.token]);\n\n  // Load user on app start\n  useEffect(() => {\n    const loadUser = async () => {\n      if (state.token) {\n        try {\n          const response = await axios.get('/api/auth/me');\n          dispatch({\n            type: 'AUTH_SUCCESS',\n            payload: {\n              user: response.data.user,\n              token: state.token\n            }\n          });\n        } catch {\n          dispatch({\n            type: 'AUTH_FAILURE'\n          });\n        }\n      } else {\n        dispatch({\n          type: 'AUTH_FAILURE'\n        });\n      }\n    };\n    loadUser();\n  }, []);\n\n  // Login\n  const login = async (email, password) => {\n    dispatch({\n      type: 'AUTH_START'\n    });\n    try {\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: {\n          user: response.data.user,\n          token: response.data.token\n        }\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      dispatch({\n        type: 'AUTH_FAILURE'\n      });\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed');\n    }\n  };\n\n  // Register\n  const register = async (name, email, password) => {\n    dispatch({\n      type: 'AUTH_START'\n    });\n    try {\n      const response = await axios.post('/api/auth/register', {\n        name,\n        email,\n        password\n      });\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: {\n          user: response.data.user,\n          token: response.data.token\n        }\n      });\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      dispatch({\n        type: 'AUTH_FAILURE'\n      });\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed');\n    }\n  };\n\n  // Logout\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n\n  // Update profile\n  const updateProfile = async data => {\n    try {\n      const response = await axios.put('/api/auth/profile', data);\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: response.data.user\n      });\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Profile update failed');\n    }\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 10\n  }, this);\n};\n\n// Custom hook\n_s(AuthProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","jsxDEV","_jsxDEV","API_BASE_URL","defaults","baseURL","initialState","user","token","localStorage","getItem","isAuthenticated","loading","authReducer","state","action","type","payload","AuthContext","undefined","AuthProvider","children","_s","dispatch","headers","common","setItem","removeItem","loadUser","response","get","data","login","email","password","post","error","_error$response","_error$response$data","Error","message","register","name","_error$response2","_error$response2$data","logout","updateProfile","put","_error$response3","_error$response3$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/home/shubh/Yuvamanthan/client/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\n\n// ✅ Backend Base URL (deployed)\nconst API_BASE_URL = \"https://yuvamanthan.onrender.com\";\n\n// Set Axios base URL globally\naxios.defaults.baseURL = API_BASE_URL;\n\n// Types\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  avatar: string;\n  location: string;\n  bio: string;\n}\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  loading: boolean;\n}\n\ninterface AuthContextType extends AuthState {\n  login: (email: string, password: string) => Promise<void>;\n  register: (name: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n  updateProfile: (data: Partial<User>) => Promise<void>;\n}\n\n// Initial state\nconst initialState: AuthState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true,\n};\n\n// Action types\ntype AuthAction =\n  | { type: 'AUTH_START' }\n  | { type: 'AUTH_SUCCESS'; payload: { user: User; token: string } }\n  | { type: 'AUTH_FAILURE' }\n  | { type: 'LOGOUT' }\n  | { type: 'UPDATE_USER'; payload: User };\n\n// Reducer\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\n  switch (action.type) {\n    case 'AUTH_START':\n      return { ...state, loading: true };\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case 'AUTH_FAILURE':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Auth provider component\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Axios default Authorization setup\n  useEffect(() => {\n    if (state.token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n      localStorage.setItem('token', state.token);\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n      localStorage.removeItem('token');\n    }\n  }, [state.token]);\n\n  // Load user on app start\n  useEffect(() => {\n    const loadUser = async () => {\n      if (state.token) {\n        try {\n          const response = await axios.get('/api/auth/me');\n          dispatch({\n            type: 'AUTH_SUCCESS',\n            payload: { user: response.data.user, token: state.token },\n          });\n        } catch {\n          dispatch({ type: 'AUTH_FAILURE' });\n        }\n      } else {\n        dispatch({ type: 'AUTH_FAILURE' });\n      }\n    };\n\n    loadUser();\n  }, []);\n\n  // Login\n  const login = async (email: string, password: string) => {\n    dispatch({ type: 'AUTH_START' });\n    try {\n      const response = await axios.post('/api/auth/login', { email, password });\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: { user: response.data.user, token: response.data.token },\n      });\n    } catch (error: any) {\n      dispatch({ type: 'AUTH_FAILURE' });\n      throw new Error(error.response?.data?.message || 'Login failed');\n    }\n  };\n\n  // Register\n  const register = async (name: string, email: string, password: string) => {\n    dispatch({ type: 'AUTH_START' });\n    try {\n      const response = await axios.post('/api/auth/register', { name, email, password });\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: { user: response.data.user, token: response.data.token },\n      });\n    } catch (error: any) {\n      dispatch({ type: 'AUTH_FAILURE' });\n      throw new Error(error.response?.data?.message || 'Registration failed');\n    }\n  };\n\n  // Logout\n  const logout = () => {\n    dispatch({ type: 'LOGOUT' });\n  };\n\n  // Update profile\n  const updateProfile = async (data: Partial<User>) => {\n    try {\n      const response = await axios.put('/api/auth/profile', data);\n      dispatch({ type: 'UPDATE_USER', payload: response.data.user });\n    } catch (error: any) {\n      throw new Error(error.response?.data?.message || 'Profile update failed');\n    }\n  };\n\n  const value: AuthContextType = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateProfile,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\n// Custom hook\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}